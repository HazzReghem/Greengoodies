security:
    # Gestion des hasher de mot de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Provider pour récupérer les utilisateurs depuis la base de données
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Désactivation des firewalls pour certaines routes de développement
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Gestion de l'authentification via formulaire classique (pour le frontend web)
        main:
            pattern: ^/(?!api)  # Empêche main de s'appliquer aux routes /api
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: app_homepage
            

        # Firewall pour l'API (connexion avec JSON Web Token)
        api_login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall pour les requêtes API après authentification via JWT
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

    # Contrôle d'accès
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED}



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
